import math

#Number 1: 198 and 243
#Number 2: 1819 and 3587


'''
Calculate mod inverses for: 13,
58021664585639791181184025950440248398226136069516938232493687505
8224718365368242988227337103422506977399968259382326419406708576
2451410312598613405099769716012730154799578846813788765182370710
2007839

and also:
2505569523276462144272467774880323517121390946439883947261933473
5209252661630546922013328792922224231576183412919643039801184497
8805263868522770723615504744438638381670321613949280530254014602
8877079603757520168075106028465904927242160927212831540994699885
32068424757856392563537802339735359978831013,

3373173703468584728999065980339992781006346742496369077930826947
8413489850903025501494210773777345089120053715900300938199998102
8861354890122260829608957849456387480782848651487055603560029245
5467467109896792098065671846896181713928254906078154942647385027
9325814189625371007027217679734692294513412457789404841677617355
97977769838688336125466941182558530861180855721395461768669312636
029598922294022
'''




#needs two numbers as input with num1 being larger. This is the extended Euclidean Algorithm

#This is the euclidean algorithm, we can extend it to also have the functionality of the extended version as well.
def find_gcd(num1, num2):
	answer = 0
	#quotient = math.floor(num1 / num2)
	if num1 != 0 and num2 == 0:#Base case
		return num1
	remainder = num1 % num2
	answer = find_gcd(num2, remainder)
	return answer

#This is based off of the implementation of the extended Euclidean algorithm I found here:
#https://www.geeksforgeeks.org/python-program-for-basic-and-extended-euclidean-algorithms-2/
def EUA(a, b):
	if a == 0 :
		return b,0,1
             
	gcd, s1, t1 = EUA(b % a, a)
     
    # Update x and y using results of recursive
    # call
	x = t1 - (b // a) * s1
	y = s1
     
	return gcd,x,y



def main():
	answer = find_gcd(198, 243)
	print(answer)

	answer, x, y = EUA(198, 243)
	print(answer)
	#print(x)
	#print(y)

	
	answer = find_gcd(1819, 3587)
	print(answer)

	answer, x, y = EUA(1819, 3587)
	print(answer)
	#answer, x, y = EUA(58021664585639791181184025950440248398226136069516938232493687505822471836536824298822733710342250697739996825938232641940670857624514103125986134050997697160127301547995788468137887651823707102007839, 13)
	#print(answer, x, y)

	'''

	num1 = int("""2505569523276462144272467774880323517121390946439883947261933473
	5209252661630546922013328792922224231576183412919643039801184497
	8805263868522770723615504744438638381670321613949280530254014602
	8877079603757520168075106028465904927242160927212831540994699885
	32068424757856392563537802339735359978831013""".replace("\n", "").replace("\t", ""))

	num2 = int("""3373173703468584728999065980339992781006346742496369077930826947
	8413489850903025501494210773777345089120053715900300938199998102
	8861354890122260829608957849456387480782848651487055603560029245
	5467467109896792098065671846896181713928254906078154942647385027
	9325814189625371007027217679734692294513412457789404841677617355
	97977769838688336125466941182558530861180855721395461768669312636
	029598922294022""".replace("\n", "").replace("\t", ""))

	answer, x, y = EUA(num1, num2)
	print(answer, x, y)
	'''

if __name__ == "__main__":
	main()